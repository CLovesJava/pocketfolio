buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	// querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'E101'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2
	implementation "org.apache.commons:commons-dbcp2"
	// https://mvnrepository.com/artifact/org.aspectj/aspectjrt
	runtimeOnly 'org.aspectj:aspectjrt:1.9.9.1'
    // https://mvnrepository.com/artifact/org.aspectj/aspectjweaver
	runtimeOnly 'org.aspectj:aspectjweaver:1.9.9.1'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-aop
	//implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '2.6.7'
	
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.9.0'

	// https://mvnrepository.com/artifact/org.hibernate/hibernate-core
	implementation 'org.hibernate:hibernate-core:5.6.10.Final'

	// spring-boot-starter-validation: @NotNull
    implementation 'org.springframework.boot:spring-boot-starter-validation'

	// spring-doc
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.12'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.6.12'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// https://mvnrepository.com/artifact/commons-io/commons-io // file upload
	implementation 'commons-io:commons-io:2.11.0'
	implementation 'commons-fileupload:commons-fileupload:1.4'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'

	implementation 'org.apache.tika:tika-core:2.6.0'

	// querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}" // Querydsl 관련 코드 생성 기능

}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets { // IDE의 소스 폴더에 자동으로 넣어줌
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl // Q파일 생성
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath // 컴파일 될 때 같이 수행
}
// querydsl 추가 끝
